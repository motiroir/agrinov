@using AgriNov.Models
@model AgriNov.Models.ShoppingCart
@{
    Layout = "_BaseLayout";
    ViewBag.Title = "Mon panier";
}
@section ExtraStyle {
    <link rel="stylesheet" href="~/CSS/shoppingcartstyle.css">
    <link rel="stylesheet" href="~/CSS/formstyle.css" />
    <link rel="stylesheet" href="~/CSS/buttonsstyle.css" />
    <style>
        .cart {
            margin-top: 200px;
        }
    </style>
}

<div class="cart-header">
    <h2>mon panier</h2>
    <div></div>
    <div class="underline" id="underline-1"></div>
    <div class="underline" id="underline-2"></div>
    <div class="underline" id="underline-3"></div>
</div>

@if (Model.ShoppingCartItems != null && Model.ShoppingCartItems.Any())
{
    
    <div class="cart-container">
        <div class="cart-left">
            @using (Html.BeginForm("Index", "ShoppingCart", FormMethod.Post))
            {

                @for (int i = 0; i < Model.ShoppingCartItems.Count; i++)
                {
                    ShoppingCartItem item = Model.ShoppingCartItems[i];

                    <div class="product-card">
                        <div class="product-image">

                            @if (item.MemberShipFee != null)
                            {
                                <img src="~/img/products/members.png" width="auto" height="150px" />
                            }
                            else if (item.Product != null)
                            {
                                String srcValue = "data:image.jpg;base64," + Convert.ToBase64String(item.Product.ImgProduct) + "";
                                <img id="imgViewer" src=@srcValue />
                            }
                            else if (item.BoxContract != null)
                            {
                                if (item.Quantity == 1)
                                {
                                    String srcValue = "data:image.jpg;base64," + Convert.ToBase64String(item.BoxContract.ImgSmallBoxContract) + "";
                                    <img id="imgViewer" src=@srcValue />
                                }
                                else
                                {
                                    String srcValue = "data:image.jpg;base64," + Convert.ToBase64String(item.BoxContract.ImgBigBoxContract) + "";
                                    <img id="imgViewer" src=@srcValue />
                                }
                            }

  
                        </div>
                        <div class="product-info">
                            @if (item.MemberShipFee != null)
                            {
                                <h3>@("Cotisation annuelle")</h3>
                                <p class="product-details">Vous devez adhérer tous les ans pour faire des achats.</p>
                                <p class="product-price">@item.MemberShipFee.Price.ToString("C")</p>
                            }
                            else if (item.Product != null)
                            {
                                <h3>@item.Product.Name</h3>
                                <p class="product-details">@item.Product.Description</p>
                                <p class="product-price">@item.Product.Price.ToString("C")</p>
                            }
                            else if (item.BoxContract != null)
                            {
                                
                                <h3>@(item.Quantity == 1 ? "Petit" : item.Quantity == 2 ? "Grand" : "") panier de @item.BoxContract.ProductType.GetDisplayName()</h3>
                                <p class="product-details">Panier pour la saison @item.BoxContract.Seasons.GetDisplayName() @item.BoxContract.Years.GetDisplayName() Prix à la semaine</p>
                                <p class="product-price">@((@item.BoxContract.Price * item.Quantity).ToString("C"))</p>
                            }
                        </div>

                        <div class="product-right-div">
                            
                            <div class="product-quantity">
                                @if(item.Product != null)
                                {
                                    <div class="quantity-selector">
                                        <button class="minus">-</button>
                                        <input type="text" name="ShoppingCartItems[@i].Quantity" value="@Model.ShoppingCartItems[i].Quantity" min="0" max="@Model.ShoppingCartItems[i].Product.Stock" readonly>
                                        <button class="plus">+</button>
                                    </div>
                                    
                                }
                                else if(item.MemberShipFee != null)
                                {
                                   @* @item.Quantity; *@
                                   @Html.HiddenFor(m=> m.ShoppingCartItems[i].Quantity)
                                }
                                else if(item.BoxContract != null)
                                {
                                    @* <span>1</span> *@
                                    @Html.HiddenFor(m=> m.ShoppingCartItems[i].Quantity)
                                }
                            </div>
                            <div class="product-total">
                                <span>@item.Total.ToString("C")</span>
                            </div>

                        </div>
                    </div>

                }       
                       

                <div class="bottom-container">
                    <a href="@Url.Action("ProductDashboard", "Product")" class="return">&lt; continuer mes achats</a>
                    <button class="lightOrange-btn" type="submit">Mettre à jour le panier</button>
                </div>
                
            }
        </div>

        <div class="cart-right">
            <h4>ma commande</h4>

            @for (int i = 0; i < Model.ShoppingCartItems.Count; i++)
            {
                ShoppingCartItem item = Model.ShoppingCartItems[i];
                <div class="cart-line">
                    @if (item.MemberShipFee != null)
                    {
                        <p class="name">Cotisation annuelle</p>
                        <p class="price">@item.Total.ToString("C")</p>
                    }
                    else if(item.Product != null)
                    {
                        <p class="name">@item.Product.Name</p>
                        <p class="price">@item.Total.ToString("C")</p>
                    }
                    else if(item.BoxContract != null)
                    {
                        
                         <p class="name">@(item.Quantity == 1 ? "Petit" : item.Quantity == 2 ? "Grand" : "") panier de @item.BoxContract.ProductType.GetDisplayName()</p>
                        <p class="price">@item.Total.ToString("C")</p> 
                    }
                </div>
            }

            <div class="line"></div>
            <div class="cart-line">
                <p class="name"><b>Total</b></p>
                <p class="price"><b>@Model.Total.ToString("C")</b></p>
            </div>
            <div class="btn-container">
                <a class="lightOrange-btn w-100" href='@Url.Action("PlaceOrder","ShoppingCart")'>Passer au paiement</a>
                <a class="orangeRed-btn w-100" href='@Url.Action("EmptyCart","ShoppingCart")'>Vider le panier</a>
            </div>
            

        </div>

    </div>
       
    }else
{
    <div class="message-container">
        <h4>Le panier est actuellement vide, rendez vous dans &nbsp;<a class="mentions-legales" href="@Url.Action("ProductDashboard", "Product")">notre boutique en ligne</a>&nbsp; pour le remplir des délicieux produits de nos producteurs.</h4>
    </div>
}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Sélectionne toutes les instances de .quantity-selector pour chaque produit
        const quantitySelectors = document.querySelectorAll('.quantity-selector');

        quantitySelectors.forEach(selector => {
            const minusButton = selector.querySelector('button.minus');
            const plusButton = selector.querySelector('button.plus');
            const quantityInput = selector.querySelector('input');
            const minValue = parseInt(quantityInput.getAttribute('min'));
            const maxValue = parseInt(quantityInput.getAttribute('max'));

            minusButton.addEventListener('click', function (event) {
                event.preventDefault(); // Empêche la soumission du formulaire
                let currentValue = parseInt(quantityInput.value);
                if (currentValue > minValue) {
                    quantityInput.value = currentValue - 1;
                }
            });

            plusButton.addEventListener('click', function (event) {
                event.preventDefault(); // Empêche la soumission du formulaire
                let currentValue = parseInt(quantityInput.value);
                if (currentValue < maxValue) {
                    quantityInput.value = currentValue + 1;
                }
            });
        });
    });

</script>
