﻿@using AgriNov.Models
@model AgriNov.ViewModels.BoxContractViewModel

@{
    Layout = "_BaseLayout";
    ViewBag.Title = "Créer un contrat";
}
@section ExtraStyle {
    <link rel="stylesheet" href="~/CSS/formstyle.css">
    <link rel="stylesheet" href="~/CSS/buttonsstyle.css">
    <link rel="stylesheet" href="~/CSS/alert.css">
}

<div id="popup">
    <div class="popup-content">
        <span class="close-button">&times;</span>
        <p>Le contrat existe déjà et ne peut pas être ajouté une seconde fois.</p>
    </div>
</div>

<a href="@Url.Action("ShowAllBoxContracts", "BoxContract")" class="return-link">< Retour à la liste des contrats</a>

<div class="form">
    @using (Html.BeginForm("CreateBoxContract", "BoxContract", FormMethod.Post))
    {
        <h2>Créer un nouveau contrat</h2>

        <div class="form-content">
            <div class="form-subcontent">
        <div class="form-left-content">
                    <div>
                        @Html.LabelFor(model => model.ProductType, new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.ProductType, new SelectList(Model.ProductOptions, "Value", "Text", 0), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProductType, null, new { @class = " validation-error" })
                    </div>

                    <div>
                        @Html.LabelFor(model => model.Years, new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.Years, new SelectList(Model.YearOptions, "Value", "Text", 0), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Years, null, new { @class = " validation-error" })
                    </div>

                    <div>
                        @Html.LabelFor(model => model.Seasons, new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.Seasons, new SelectList(Model.SeasonOptions, "Value", "Text", 0), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Seasons, null, new { @class = " validation-error" })
                    </div>

        
        </div>
        <div class="form-right-content">

                <div>
                    <span>
                        <svg width="15" height="15" viewBox="0 0 96 96" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M14.5 14.5C-4 33 -4 63 14.5 81.5C33 100 63 100 81.5 81.5C100 63 100 33 81.5 14.5C63 -4 33 -4 14.5 14.5ZM49.9 20.5C53.9 20.5 57.1 23.8 57.1 27.8C57.1 31.8 53.8 35.1 49.9 35.1C45.9 35.1 42.6 31.8 42.6 27.7C42.6 23.7 45.9 20.5 49.9 20.5ZM60.2 69.4C60 70 59.6 70.7 59.2 71.1C56.6 73.8 53.4 75.4 49.6 75.4C47.8 75.4 46.1 75.4 44.3 75.1C41.4 74.7 37.7 71.1 38.2 67.3C38.6 64.7 39 62.1 39.4 59.5C40.2 55 41 50.4 41.8 45.9C41.8 45.6 41.9 45.3 41.9 45C41.9 43.1 41.3 42.4 39.4 42.2C38.6 42.1 37.8 42 37 41.8C36.1 41.5 35.6 40.7 35.7 40C35.8 39.2 36.3 38.7 37.3 38.5C37.8 38.4 38.4 38.4 39 38.4C41.2 38.4 43.4 38.4 45.7 38.4C48.1 38.4 50.4 38.4 52.8 38.4C54.5 38.4 55.5 39.2 55.5 40.9C55.5 42.3 55.3 43.7 55 45.1C54.1 50.3 53.1 55.4 52.2 60.6C51.9 62.3 51.5 64 51.3 65.7C51.2 66.5 51.3 67.4 51.5 68.2C51.8 69.3 52.6 69.9 53.7 69.8C54.6 69.7 55.5 69.4 56.4 69C57.1 68.7 57.7 68.2 58.4 68C59.6 67.6 60.5 68.3 60.2 69.4Z" fill="#EB7051" />
                        </svg>
                        Si vous souhaitez calculer le nombre de contrats qui seront créés vous pouvez cliquer sur le bouton "calculer" après avoir rempli tous les champs.
                    </span>
                    <br />
                    <span>
                        Stock total :
                        @if (@Model.GlobalStock != 0)
                        {
                            @Model.GlobalStock
                        }
                        @if (Model.ProductType == ProductType.VEGETABLES || Model.ProductType == ProductType.FISH || Model.ProductType == ProductType.MEAT || Model.ProductType == ProductType.FRUITS)
                        {
                            @: kg
                        }
                        @if (Model.ProductType == ProductType.EGGS)
                        {
                            @: oeufs
                        }
                        @if (Model.ProductType == ProductType.DAYRIS)
                        {
                            @: l
                        }
                    </span>
                    <br/>
                    <span>Nombre de contrats : 
                        @if (@Model.GlobalStock != 0)
                        {
                            @Model.BoxContract.MaxSubscriptions
                        }
                    </span>
                </div>
                <button type="submit" name="action" value="calculate" class="lightOrange-btn w-100">Calculer</button>
        </div>

        </div>
            <div>
                @Html.LabelFor(model => model.BoxContract.Price)
                @Html.TextBoxFor(model => model.BoxContract.Price, new { @type = "text", @class = "form-control", @step = "0.01"})
                @Html.ValidationMessageFor(model => model.BoxContract.Price, null, new { @class = "validation-error" })
            </div>

            <div>
                @Html.LabelFor(model => model.QuantityPerBox)
                @Html.TextBoxFor(model => model.QuantityPerBox, new { @type = "number", @min = "0", @step = "1", @class = "form-control"})
                @Html.ValidationMessageFor(model => model.QuantityPerBox, null, new { @class = "validation-error" })
            </div>
        </div>
        <button type="submit" name="action" value="validate" class="orange-btn w-100">Valider</button>
    }
</div>

<script>
    var contractExists = '@ViewBag.ContractExists'.toLowerCase();
</script>
<script src="~/scripts/alert.js"></script>